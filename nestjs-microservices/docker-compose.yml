version: '3.4'

services:

  db:
    image: mysql:latest
    env_file: ./.env
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin@123
      MYSQL_DATABASE: $RDS_DATABASE
      MYSQL_USER: $RDS_USERNAME
      MYSQL_PASSWORD: $RDS_PASSWORD
      MYSQL_TCP_PORT: $RDS_PORT
    ports:
      - $RDS_PORT:$RDS_PORT
    logging:
      driver: none
    networks:
      - my_network
    command: mysqld --innodb_use_native_aio=0 --default-authentication-plugin=caching_sha2_password --sql_mode=""

  redis:
    image: redis
    ports:
      - $REDIS_PORT:$REDIS_PORT
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - $RABBITMQ_PORT:$RABBITMQ_PORT
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - my_network

  main-backend:
    build:
      context: .
      dockerfile: ./main-backend/Dockerfile
    env_file: ./main-backend/.env
    environment:
      - APP_PORT=3000
    ports:
      - 3000:3000
    volumes:
      - ./main-backend:/usr/main-backend
    networks:
      - my_network
    depends_on:
      - module-second

  module-second:
    build:
      context: .
      dockerfile: ./module-second/Dockerfile
    env_file: ./module-second/.env
    environment:
      - APP_PORT=8878
    ports:
      - 8878:8878
    volumes:
      - ./module-second:/usr/module-second
    networks:
      - my_network

  user-module:
    build:
      context: .
      dockerfile: ./user-module/Dockerfile
    env_file: ./user-module/.env
    environment:
      - APP_PORT=8876
    ports:
      - 8876:8876
    volumes:
      - ./user-module:/usr/src/user-module    
    networks:
      - my_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  order-module:
    build:
      context: .
      dockerfile: ./order-module/Dockerfile
    env_file: ./order-module/.env
    environment:
      - APP_PORT=8888
    ports:
      - 8888:8888
    volumes:
      - ./order-module:/usr/src/order-module
    networks:
      - my_network

networks:
  my_network:
    driver: bridge